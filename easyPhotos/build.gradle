apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 23
        //noinspection OldTargetApi
        targetSdkVersion 33
        versionCode 125
        versionName "1.2.5"
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    namespace 'com.huantansheng.easyphotos'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //noinspection GradleDependency
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //noinspection GradleDependency
    implementation 'com.google.android.material:material:1.2.1'
    //noinspection GradleDependency
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
}

// 增加上传源码的task
tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}

publishing {
    publications {
        aarAndroid(MavenPublication) {
            groupId = 'com.github.lcyluo'
            artifactId = 'EasyPhotos'
            version = '1.2.5'
            // 增加上传源码的 task
            artifact sourceJar
            // 必须有这个 否则不会上传AAR包
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }

            // pom文件中声明依赖，从而传递到使用方
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    // 避免出现空节点或 artifactId=unspecified 的节点
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        println "dependency=${it.toString()}"
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
            }
        }
    }
}